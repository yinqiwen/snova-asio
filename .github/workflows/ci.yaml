name: CIBuild

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - dev
    # Sequence of patterns matched against refs/tags
    tags:        
      - '*'
  pull_request:
    types: [ assigned, opened, synchronize, reopened, labeled ]
jobs:
  linux_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - uses: bazelbuild/setup-bazelisk@v2
      - run: bazel build --features=fully_static_link --cxxopt=-std=c++20 --incompatible_enable_cc_toolchain_resolution --platforms=//toolchains:linux_musl_x64 //...
      - name: LinuxX64Archive
        run: tar czf snova_asio_${VER_NAME}_linux_musl_amd64.tar.gz -C ./bazel-bin/snova/app/ snova
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
      - run: bazel clean --expunge
      - run: bazel build --features=fully_static_link --cxxopt=-std=c++20 --incompatible_enable_cc_toolchain_resolution --platforms=//toolchains:linux_musl_armv5l //...
      - name: LinuxArmv5lArchive
        run: tar czf snova_asio_${VER_NAME}_linux_musl_armv5l.tar.gz -C ./bazel-bin/snova/app/ snova
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            snova_asio_${VER_NAME}_linux_musl_amd64.tar.gz
            snova_asio_${VER_NAME}_linux_musl_armv5l.tar.gz
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
  windows_build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - uses: bazelbuild/setup-bazelisk@v2
      - run: bazel.exe build --features=fully_static_link --cxxopt=/O2 --enable_runfiles --cxxopt=/std:c++20  //...
      - name: WindowsX64Archive
        run: tar czf snova_asio_${VER_NAME}_windows_amd64.tar.gz -C ./bazel-bin/snova/app/ snova.exe 
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: snova_asio_${VER_NAME}_windows_amd64.tar.gz 
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
  macos_build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - uses: bazelbuild/setup-bazelisk@v2
      - run: bazel build --features=fully_static_link --cxxopt=-std=c++20  //...
      - name: MacX64Archive
        run: tar czf snova_asio_${VER_NAME}_darwin_amd64.tar.gz -C ./bazel-bin/snova/app/ snova
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: snova_asio_${VER_NAME}_darwin_amd64.tar.gz 
        env:
          VER_NAME: ${{ steps.get_version.outputs.VERSION }}
  